Program([VarDecl(Id(x),IntType),VarDecl(Id(y),IntType),FuncDecl(Id(addition),[VarDecl(Id(x),IntType),VarDecl(Id(y),IntType)],FloatType,[],[Return(Some(BinaryOp(+,Id(x),Id(y))))]),FuncDecl(Id(subtract),[VarDecl(Id(x),IntType),VarDecl(Id(y),IntType)],FloatType,[],[Return(Some(BinaryOp(-,Id(x),Id(y))))]),FuncDecl(Id(multiply),[VarDecl(Id(x),IntType),VarDecl(Id(y),IntType)],FloatType,[],[Return(Some(BinaryOp(*,Id(x),Id(y))))]),FuncDecl(Id(division),[VarDecl(Id(x),IntType),VarDecl(Id(y),IntType)],FloatType,[],[Return(Some(BinaryOp(div,Id(x),Id(y))))]),FuncDecl(Id(main),[],VoidType(),[],[CallStmt(Id(write),[StringLiteral(Nhap 2 so can cong la: )]),CallStmt(Id(read),[Id(x),Id(y)]),CallStmt(Id(writeln),[StringLiteral(Ket qua cua phep cong la: )]),CallStmt(Id(print),[CallExpr(Id(addition),[Id(x),Id(y)])]),CallStmt(Id(writeln),[StringLiteral(Ket qua cua phep tru la: )]),CallStmt(Id(print),[CallExpr(Id(subtract),[Id(x),Id(y)])]),CallStmt(Id(writeln),[StringLiteral(Ket qua cua phep nhan la: )]),CallStmt(Id(print),[CallExpr(Id(multiply),[Id(x),Id(y)])]),CallStmt(Id(writeln),[StringLiteral(Ket qua cua phep chia la: )]),CallStmt(Id(print),[CallExpr(Id(division),[Id(x),Id(y)])])])])